version: "3.7"

services:

    nginx:
      build: docker/nginx
      restart: on-failure
      volumes:
          - ./backend:/var/www/backend:delegated
          - ./var/logs/nginx/:/var/log/nginx:delegated
          - ./docker/nginx/backend.conf:/etc/nginx/conf.d/backend.conf:delegated
          - ./docker/nginx/frontend.conf:/etc/nginx/conf.d/frontend.conf:delegated
          - ./docker/nginx/yassine-el-azami_com.key:/etc/nginx/cert/yassine-el-azami_com.key
          - ./docker/nginx/yassine-el-azami_com.crt:/etc/nginx/cert/yassine-el-azami_com.crt
      ports:
          - "90:80"
      networks:
          - monitoring
      depends_on: 
        - backend
        - frontend

    backend:
        build: docker/backend
        restart: on-failure
        volumes:
            - ./backend:/var/www/backend:delegated
            - ./docker/backend/php.ini:/usr/local/etc/backend/php.ini:ro
        networks:
            - monitoring
        depends_on: 
            - db

    db:
      build: docker/db
      environment:
        MYSQL_ROOT_PASSWORD: e51444b3d1785e
        MYSQL_DATABASE: my_portfolio
        MYSQL_USER: yassine
        MYSQL_PASSWORD: e51444b3d1785e
      networks:
        - monitoring
      ports:
        - "3306:3306"
      volumes:
        - dbdata:/var/lib/mysql


    frontend:
      build: frontend
      restart: on-failure
      command: "npm start"
      depends_on:
        - backend
      networks:
        - monitoring
      volumes:
        - ./frontend:/var/www/frontend:delegated
        - nodemodules:/var/www/frontend/node_modules
      ports:
      - "3000:3000"

networks:
    monitoring:
        driver: bridge

# volumes
volumes:
  nodemodules: {}
  dbdata: